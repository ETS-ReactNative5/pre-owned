{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Layout } from '@ui-kitten/components';\nimport { ProductList } from \"../components/ListItem\";\nimport DeleteAction from \"../components/elements/DeleteAction\";\nimport colors from \"../utils/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar initialMessages = [{\n  id: 1,\n  title: 'T1',\n  description: 'D1',\n  image: require(\"../assets/products/profilepic.jpg\")\n}, {\n  id: 2,\n  title: 'T2',\n  description: 'D2',\n  image: require(\"../assets/products/books.jpg\")\n}];\n\nvar MyListing = function MyListing() {\n  var _useState = useState(initialMessages),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refreshing = _useState4[0],\n      setRefreshing = _useState4[1];\n\n  var handleDelete = function handleDelete(message) {\n    setMessages(messages.filter(function (m) {\n      return m.id !== message.id;\n    }));\n  };\n\n  return _jsx(Layout, {\n    children: _jsx(FlatList, {\n      data: messages,\n      keyExTractor: function keyExTractor(message) {\n        return message.id.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(ProductList, {\n          title: item.title,\n          subTitle: item.description,\n          image: item.image,\n          onPress: function onPress() {\n            return console.log('message selected', item);\n          },\n          renderRightActions: function renderRightActions() {\n            return _jsx(DeleteAction, {\n              onPress: function onPress() {\n                return handleDelete(item);\n              }\n            });\n          }\n        });\n      },\n      ItemSeparatorComponent: _jsx(Layout, {\n        style: {\n          width: '100%',\n          height: 1,\n          backgroundColor: colors.stroke\n        }\n      }),\n      refreshing: refreshing,\n      onRefresh: function onRefresh() {\n        setMessages([{\n          id: 2,\n          title: 'T2',\n          description: 'D2',\n          image: require(\"../assets/products/profilepic.jpg\")\n        }]);\n      }\n    })\n  });\n};\n\nexport default MyListing;","map":{"version":3,"sources":["/Users/anhuynh2503/Desktop/React Native/Project/pre-owned/views/MyListing.js"],"names":["React","useState","Layout","ProductList","DeleteAction","colors","initialMessages","id","title","description","image","require","MyListing","messages","setMessages","refreshing","setRefreshing","handleDelete","message","filter","m","toString","item","console","log","width","height","backgroundColor","stroke"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,SAAQC,MAAR,QAAqB,uBAArB;AACA,SAAQC,WAAR;AACA,OAAOC,YAAP;AACA,OAAOC,MAAP;;AAEA,IAAMC,eAAe,GAAG,CACtB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,IAFT;AAGEC,EAAAA,WAAW,EAAE,IAHf;AAIEC,EAAAA,KAAK,EAAEC,OAAO;AAJhB,CADsB,EAOtB;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,IAFT;AAGEC,EAAAA,WAAW,EAAE,IAHf;AAIEC,EAAAA,KAAK,EAAEC,OAAO;AAJhB,CAPsB,CAAxB;;AAcA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,kBAAgCX,QAAQ,CAACK,eAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAoCb,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOc,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAa;AAEhCJ,IAAAA,WAAW,CAACD,QAAQ,CAACM,MAAT,CAAgB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACb,EAAF,KAASW,OAAO,CAACX,EAAxB;AAAA,KAAhB,CAAD,CAAX;AACD,GAHD;;AAKA,SACE,KAAC,MAAD;AAAA,cACE,KAAC,QAAD;AACE,MAAA,IAAI,EAAEM,QADR;AAEE,MAAA,YAAY,EAAE,sBAACK,OAAD;AAAA,eAAaA,OAAO,CAACX,EAAR,CAAWc,QAAX,EAAb;AAAA,OAFhB;AAGE,MAAA,UAAU,EAAE;AAAA,YAAEC,IAAF,QAAEA,IAAF;AAAA,eACV,KAAC,WAAD;AACE,UAAA,KAAK,EAAEA,IAAI,CAACd,KADd;AAEE,UAAA,QAAQ,EAAEc,IAAI,CAACb,WAFjB;AAGE,UAAA,KAAK,EAAEa,IAAI,CAACZ,KAHd;AAIE,UAAA,OAAO,EAAE;AAAA,mBAAMa,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,IAAhC,CAAN;AAAA,WAJX;AAKE,UAAA,kBAAkB,EAAE;AAAA,mBAClB,KAAC,YAAD;AAAc,cAAA,OAAO,EAAE;AAAA,uBAAML,YAAY,CAACK,IAAD,CAAlB;AAAA;AAAvB,cADkB;AAAA;AALtB,UADU;AAAA,OAHd;AAcE,MAAA,sBAAsB,EACpB,KAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAACG,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,MAAM,EAAE,CAAxB;AAA2BC,UAAAA,eAAe,EAAEtB,MAAM,CAACuB;AAAnD;AADT,QAfJ;AAmBE,MAAA,UAAU,EAAEb,UAnBd;AAoBE,MAAA,SAAS,EAAE,qBAAM;AACfD,QAAAA,WAAW,CAAC,CACV;AACEP,UAAAA,EAAE,EAAE,CADN;AAEEC,UAAAA,KAAK,EAAE,IAFT;AAGEC,UAAAA,WAAW,EAAE,IAHf;AAIEC,UAAAA,KAAK,EAAEC,OAAO;AAJhB,SADU,CAAD,CAAX;AAQD;AA7BH;AADF,IADF;AAmCD,CA5CD;;AA6CA,eAAeC,SAAf","sourcesContent":["import React, {useState} from 'react';\nimport {FlatList} from 'react-native';\nimport {Layout} from '@ui-kitten/components';\nimport {ProductList} from '../components/ListItem';\nimport DeleteAction from '../components/elements/DeleteAction';\nimport colors from '../utils/colors';\n\nconst initialMessages = [\n  {\n    id: 1,\n    title: 'T1',\n    description: 'D1',\n    image: require('../assets/products/profilepic.jpg'),\n  },\n  {\n    id: 2,\n    title: 'T2',\n    description: 'D2',\n    image: require('../assets/products/books.jpg'),\n  },\n];\nconst MyListing = () => {\n  const [messages, setMessages] = useState(initialMessages);\n  const [refreshing, setRefreshing] = useState(false);\n\n  const handleDelete = (message) => {\n    // delete the message from messages array\n    setMessages(messages.filter((m) => m.id !== message.id));\n  };\n\n  return (\n    <Layout>\n      <FlatList\n        data={messages}\n        keyExTractor={(message) => message.id.toString()}\n        renderItem={({item}) => (\n          <ProductList\n            title={item.title}\n            subTitle={item.description}\n            image={item.image}\n            onPress={() => console.log('message selected', item)}\n            renderRightActions={() => (\n              <DeleteAction onPress={() => handleDelete(item)} />\n            )}\n          />\n        )}\n        ItemSeparatorComponent={\n          <Layout\n            style={{width: '100%', height: 1, backgroundColor: colors.stroke}}\n          />\n        }\n        refreshing={refreshing}\n        onRefresh={() => {\n          setMessages([\n            {\n              id: 2,\n              title: 'T2',\n              description: 'D2',\n              image: require('../assets/products/profilepic.jpg'),\n            },\n          ]);\n        }}\n      />\n    </Layout>\n  );\n};\nexport default MyListing;\n"]},"metadata":{},"sourceType":"module"}