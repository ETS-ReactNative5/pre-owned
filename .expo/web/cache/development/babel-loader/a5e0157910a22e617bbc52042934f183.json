{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { MainContext } from \"../contexts/MainContext\";\nimport { getUserByToken } from \"../hooks/ApiHooks\";\nimport { AppButton } from \"../components/elements/AppButton\";\nimport LottieView from 'lottie-react-native';\nimport { Layout, Text } from '@ui-kitten/components';\nimport colors from \"../utils/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar WelcomeScreen = function WelcomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var animation = React.createRef();\n\n  var _useContext = useContext(MainContext),\n      setIsLoggedIn = _useContext.setIsLoggedIn,\n      setUser = _useContext.setUser,\n      setFormToggle = _useContext.setFormToggle;\n\n  var checkToken = function checkToken() {\n    var userToken, userData;\n    return _regeneratorRuntime.async(function checkToken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('userToken'));\n\n          case 2:\n            userToken = _context.sent;\n\n            if (userToken) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 5:\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(getUserByToken(userToken));\n\n          case 8:\n            userData = _context.sent;\n            setUser(userData);\n            setIsLoggedIn(true);\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](5);\n            console.error(_context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 13]], Promise);\n  };\n\n  useEffect(function () {\n    checkToken();\n  }, []);\n  return _jsxs(ImageBackground, {\n    style: styles.background,\n    source: require(\"../assets/backgrounds/OnBoarding.png\"),\n    children: [_jsx(AppButton, {\n      title: \"Login\",\n      onPress: function onPress() {\n        navigation.navigate('Login');\n      }\n    }), _jsx(AppButton, {\n      style: {\n        marginBottom: 50\n      },\n      title: \"Create an account\",\n      onPress: function onPress() {\n        setFormToggle(false);\n        navigation.navigate('Login');\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  }\n});\nWelcomeScreen.propTypes = {\n  navigation: PropTypes.object\n};\nexport default WelcomeScreen;","map":{"version":3,"sources":["/Users/anhuynh2503/Desktop/React Native/Project/pre-owned/views/WelcomeScreen.js"],"names":["React","useContext","useEffect","PropTypes","AsyncStorage","MainContext","getUserByToken","AppButton","LottieView","Layout","Text","colors","WelcomeScreen","navigation","animation","createRef","setIsLoggedIn","setUser","setFormToggle","checkToken","getItem","userToken","userData","console","error","styles","background","require","navigate","marginBottom","StyleSheet","create","flex","justifyContent","alignItems","propTypes","object"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAAQC,WAAR;AACA,SAAQC,cAAR;AACA,SAAQC,SAAR;AAGA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,uBAA3B;AACA,OAAOC,MAAP;;;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AACtC,MAAMC,SAAS,GAAGd,KAAK,CAACe,SAAN,EAAlB;;AACA,oBAAgDd,UAAU,CAACI,WAAD,CAA1D;AAAA,MAAOW,aAAP,eAAOA,aAAP;AAAA,MAAsBC,OAAtB,eAAsBA,OAAtB;AAAA,MAA+BC,aAA/B,eAA+BA,aAA/B;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACOf,YAAY,CAACgB,OAAb,CAAqB,WAArB,CADP;;AAAA;AACXC,YAAAA,SADW;;AAAA,gBAGZA,SAHY;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAOQf,cAAc,CAACe,SAAD,CAPtB;;AAAA;AAOTC,YAAAA,QAPS;AAUfL,YAAAA,OAAO,CAACK,QAAD,CAAP;AACAN,YAAAA,aAAa,CAAC,IAAD,CAAb;AAXe;AAAA;;AAAA;AAAA;AAAA;AAafO,YAAAA,OAAO,CAACC,KAAR;;AAbe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAiBAtB,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,UAAU;AAEX,GAHQ,EAGN,EAHM,CAAT;AAKA,SACE,MAAC,eAAD;AACE,IAAA,KAAK,EAAEM,MAAM,CAACC,UADhB;AAEE,IAAA,MAAM,EAAEC,OAAO,wCAFjB;AAAA,eAaE,KAAC,SAAD;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,OAAO,EAAE,mBAAM;AACbd,QAAAA,UAAU,CAACe,QAAX,CAAoB,OAApB;AACD;AAJH,MAbF,EAmBE,KAAC,SAAD;AACE,MAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf,OADT;AAEE,MAAA,KAAK,EAAC,mBAFR;AAGE,MAAA,OAAO,EAAE,mBAAM;AACbX,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAL,QAAAA,UAAU,CAACe,QAAX,CAAoB,OAApB;AACD;AANH,MAnBF;AAAA,IADF;AA+BD,CAzDD;;AA2DA,IAAMH,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,UAAU,EAAE;AACVM,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,cAAc,EAAE,UAFN;AAGVC,IAAAA,UAAU,EAAE;AAHF;AADmB,CAAlB,CAAf;AAoBAtB,aAAa,CAACuB,SAAd,GAA0B;AACxBtB,EAAAA,UAAU,EAAEV,SAAS,CAACiC;AADE,CAA1B;AAIA,eAAexB,aAAf","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport {ImageBackground, StyleSheet} from 'react-native';\nimport PropTypes from 'prop-types';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {MainContext} from '../contexts/MainContext';\nimport {getUserByToken} from '../hooks/ApiHooks';\nimport {AppButton} from '../components/elements/AppButton';\n\n// Lottie animation\nimport LottieView from 'lottie-react-native';\nimport {Layout, Text} from '@ui-kitten/components';\nimport colors from '../utils/colors';\n\nconst WelcomeScreen = ({navigation}) => {\n  const animation = React.createRef(); // animation\n  const {setIsLoggedIn, setUser, setFormToggle} = useContext(MainContext);\n\n  const checkToken = async () => {\n    const userToken = await AsyncStorage.getItem('userToken');\n    // console.log('token value in async storage', userToken);\n    if (!userToken) {\n      return;\n    }\n    try {\n      const userData = await getUserByToken(userToken);\n      // console.log('chekToken', userData);\n      // console.log('token', userToken);\n      setUser(userData);\n      setIsLoggedIn(true);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    checkToken();\n    // animation.current?.play();\n  }, []);\n\n  return (\n    <ImageBackground\n      style={styles.background}\n      source={require('../assets/backgrounds/OnBoarding.png')}\n    >\n      {/* <Layout style={styles.inner}> */}\n\n      {/* <LottieView\n        ref={animation}\n        source={require('../assets/brand/PreOwned-animation.json')}\n        style={styles.animation}\n        loop={true}\n      /> */}\n\n      <AppButton\n        title=\"Login\"\n        onPress={() => {\n          navigation.navigate('Login');\n        }}\n      />\n      <AppButton\n        style={{marginBottom: 50}}\n        title=\"Create an account\"\n        onPress={() => {\n          setFormToggle(false);\n          navigation.navigate('Login');\n        }}\n      />\n      {/* </Layout> */}\n    </ImageBackground>\n  );\n};\n\nconst styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  // animation: {\n  //   width: '100%',\n  //   height: '70%',\n  //   marginBottom: 20,\n  //   alignSelf: 'center',\n  // },\n  // inner: {\n  //   width: 400,\n  //   height: undefined,\n  //   backgroundColor: colors.primary,\n  //   alignSelf: 'center',\n  // },\n});\n\nWelcomeScreen.propTypes = {\n  navigation: PropTypes.object,\n};\n\nexport default WelcomeScreen;\n"]},"metadata":{},"sourceType":"module"}