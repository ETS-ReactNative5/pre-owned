{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useContext } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { BottomNavigation, BottomNavigationTab, Icon, Drawer, DrawerItem, IndexPath } from '@ui-kitten/components';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport GlobalStyles from \"../utils/GlobalStyles\";\nimport Welcome from \"../views/WelcomeScreen\";\nimport Login from \"../views/Login\";\nimport Explore from \"../views/Explore\";\nimport Message from \"../views/Message\";\nimport Search from \"../views/Search\";\nimport AddListing from \"../views/AddListing\";\nimport MyListing from \"../views/MyListing\";\nimport Favourite from \"../views/Favourite\";\nimport Profile from \"../views/Profile\";\nimport EditProfile from \"../views/EditProfile\";\nimport { MainContext } from \"../contexts/MainContext\";\nimport colors from \"../utils/colors\";\nimport ProductDetail from \"../views/ProductDetail\";\nimport PopularNow from \"../views/PopularNow\";\nimport RecentlyAdded from \"../views/RecentlyAdded\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\nvar Menu = createDrawerNavigator();\n\nvar MenuContent = function MenuContent(_ref) {\n  var navigation = _ref.navigation,\n      page = _ref.page;\n\n  var _useContext = useContext(MainContext),\n      setIsLoggedIn = _useContext.setIsLoggedIn;\n\n  var logout = function logout() {\n    Alert.alert('Log Out', 'Confirm Logout?', [{\n      text: 'Cancel'\n    }, {\n      text: 'OK',\n      onPress: function onPress() {\n        AsyncStorage.clear();\n        setIsLoggedIn(false);\n      }\n    }]);\n  };\n\n  return _jsxs(Drawer, {\n    children: [_jsx(DrawerItem, {\n      title: \"Profile\",\n      accessoryLeft: _jsx(Icon, {\n        name: \"person-outline\"\n      }),\n      onPress: function onPress() {\n        navigation.navigate('Explore', {\n          file: page\n        });\n      }\n    }), _jsx(DrawerItem, {\n      title: \"Edit Profile\",\n      accessoryLeft: _jsx(Icon, {\n        name: \"edit-outline\"\n      })\n    }), _jsx(DrawerItem, {\n      title: \"My Favorites\",\n      accessoryLeft: _jsx(Icon, {\n        name: \"heart-outline\"\n      })\n    }), _jsx(DrawerItem, {\n      title: \"My Messages\",\n      accessoryLeft: _jsx(Icon, {\n        name: \"message-circle-outline\"\n      })\n    }), _jsx(DrawerItem, {\n      title: \"My Listings\",\n      accessoryLeft: _jsx(Icon, {\n        name: \"list-outline\"\n      })\n    }), _jsx(DrawerItem, {\n      title: \"Logout\",\n      accessoryLeft: _jsx(Icon, {\n        name: \"log-out-outline\"\n      }),\n      onPress: logout\n    })]\n  });\n};\n\nvar MenuNavigator = function MenuNavigator() {\n  return _jsxs(Menu.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return _jsx(MenuContent, _objectSpread({}, props));\n    },\n    children: [_jsx(Menu.Screen, {\n      name: \"Profile\",\n      component: Profile,\n      options: {\n        headerTitleAlign: 'center'\n      }\n    }), _jsx(Menu.Screen, {\n      name: \"Edit Profile\",\n      component: EditProfile,\n      options: {\n        headerTitleAlign: 'center'\n      }\n    }), _jsx(Menu.Screen, {\n      name: \"My Favorites\",\n      component: Favourite,\n      options: {\n        headerTitleAlign: 'center'\n      }\n    }), _jsx(Menu.Screen, {\n      name: \"My Message\",\n      component: Message,\n      options: {\n        headerTitleAlign: 'center'\n      }\n    }), _jsx(Menu.Screen, {\n      name: \"My Listings\",\n      component: MyListing,\n      options: {\n        headerTitleAlign: 'center'\n      }\n    })]\n  });\n};\n\nvar BottomTabBar = function BottomTabBar(_ref2) {\n  var navigation = _ref2.navigation,\n      state = _ref2.state;\n  return _jsxs(BottomNavigation, {\n    indicatorStyle: {\n      backgroundColor: '#58854A'\n    },\n    selectedIndex: state.index,\n    onSelect: function onSelect(index) {\n      return navigation.navigate(state.routeNames[index]);\n    },\n    children: [_jsx(BottomNavigationTab, {\n      title: \"Explore\",\n      icon: _jsx(Icon, {\n        name: \"compass-outline\"\n      })\n    }), _jsx(BottomNavigationTab, {\n      title: \"Search\",\n      icon: _jsx(Icon, {\n        name: \"search-outline\"\n      })\n    }), _jsx(BottomNavigationTab, {\n      title: \"Add Listing\",\n      icon: _jsx(Icon, {\n        name: \"plus-circle-outline\"\n      })\n    }), _jsx(BottomNavigationTab, {\n      title: \"Profile\",\n      icon: _jsx(Icon, {\n        name: \"person-outline\"\n      })\n    })]\n  });\n};\n\nvar TabScreen = function TabScreen() {\n  return _jsxs(Tab.Navigator, {\n    tabBar: function tabBar(props) {\n      return _jsx(BottomTabBar, _objectSpread({}, props));\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Explore\",\n      component: Explore,\n      options: {\n        headerTitleAlign: 'center'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Search\",\n      component: Search,\n      options: {\n        headerTitleAlign: 'center'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Add Listing\",\n      component: AddListing,\n      options: {\n        headerTitleAlign: 'center'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"ProfileWrap\",\n      component: MenuNavigator,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n};\n\nvar StackScreen = function StackScreen() {\n  var _useContext2 = useContext(MainContext),\n      isLoggedIn = _useContext2.isLoggedIn;\n\n  return _jsx(Stack.Navigator, {\n    children: isLoggedIn ? _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"Main\",\n        component: TabScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Recently added\",\n        component: RecentlyAdded,\n        options: {\n          headerShown: true\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Popular now\",\n        component: PopularNow,\n        options: {\n          headerShown: true\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"ProductDetail\",\n        component: ProductDetail\n      })]\n    }) : _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Welcome\",\n        component: Welcome,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n};\n\nvar navigator = function navigator() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(SafeAreaView, {\n      style: GlobalStyles.AndroidSafeArea,\n      children: _jsx(StackScreen, {})\n    })\n  });\n};\n\nexport default navigator;","map":{"version":3,"sources":["/Users/anhuynh2503/Desktop/React Native/Project/pre-owned/navigation/navigator.js"],"names":["React","useContext","BottomNavigation","BottomNavigationTab","Icon","Drawer","DrawerItem","IndexPath","createBottomTabNavigator","NavigationContainer","createNativeStackNavigator","createDrawerNavigator","GlobalStyles","Welcome","Login","Explore","Message","Search","AddListing","MyListing","Favourite","Profile","EditProfile","MainContext","colors","ProductDetail","PopularNow","RecentlyAdded","AsyncStorage","Tab","Stack","Menu","MenuContent","navigation","page","setIsLoggedIn","logout","Alert","alert","text","onPress","clear","navigate","file","MenuNavigator","props","headerTitleAlign","BottomTabBar","state","backgroundColor","index","routeNames","TabScreen","headerShown","StackScreen","isLoggedIn","navigator","AndroidSafeArea"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\nimport {Alert, SafeAreaView} from 'react-native';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n  Icon,\n  Drawer,\n  DrawerItem,\n  IndexPath,\n} from '@ui-kitten/components';\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport {createDrawerNavigator} from '@react-navigation/drawer';\nimport GlobalStyles from '../utils/GlobalStyles';\nimport Welcome from '../views/WelcomeScreen';\nimport Login from '../views/Login';\nimport Explore from '../views/Explore';\nimport Message from '../views/Message';\nimport Search from '../views/Search';\nimport AddListing from '../views/AddListing';\nimport MyListing from '../views/MyListing';\nimport Favourite from '../views/Favourite';\nimport Profile from '../views/Profile';\nimport EditProfile from '../views/EditProfile';\nimport {MainContext} from '../contexts/MainContext';\nimport colors from '../utils/colors';\nimport ProductDetail from '../views/ProductDetail';\nimport PopularNow from '../views/PopularNow';\nimport RecentlyAdded from '../views/RecentlyAdded';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createNativeStackNavigator();\nconst Menu = createDrawerNavigator();\n\nconst MenuContent = ({navigation, page}) => {\n  const {setIsLoggedIn} = useContext(MainContext);\n  const logout = () => {\n    Alert.alert('Log Out', 'Confirm Logout?', [\n      {text: 'Cancel'},\n      {\n        text: 'OK',\n        onPress: () => {\n          AsyncStorage.clear();\n          setIsLoggedIn(false);\n        },\n      },\n    ]);\n  };\n  return (\n    <Drawer\n    // selectedIndex={new IndexPath(state.index)}\n    // onSelect={(index) => navigation.navigate(state.routeNames[index.row])}\n    >\n      <DrawerItem\n        title=\"Profile\"\n        accessoryLeft={<Icon name=\"person-outline\" />}\n        onPress={() => {\n          navigation.navigate('Explore', {file: page});\n        }}\n      />\n      <DrawerItem\n        title=\"Edit Profile\"\n        accessoryLeft={<Icon name=\"edit-outline\" />}\n      />\n      <DrawerItem\n        title=\"My Favorites\"\n        accessoryLeft={<Icon name=\"heart-outline\" />}\n      />\n      <DrawerItem\n        title=\"My Messages\"\n        accessoryLeft={<Icon name=\"message-circle-outline\" />}\n      />\n      <DrawerItem\n        title=\"My Listings\"\n        accessoryLeft={<Icon name=\"list-outline\" />}\n      />\n      <DrawerItem\n        title=\"Logout\"\n        accessoryLeft={<Icon name=\"log-out-outline\" />}\n        onPress={logout}\n      />\n    </Drawer>\n  );\n};\n\nconst MenuNavigator = () => (\n  <Menu.Navigator drawerContent={(props) => <MenuContent {...props} />}>\n    <Menu.Screen\n      name=\"Profile\"\n      component={Profile}\n      options={{headerTitleAlign: 'center'}}\n    />\n    <Menu.Screen\n      name=\"Edit Profile\"\n      component={EditProfile}\n      options={{headerTitleAlign: 'center'}}\n    />\n    <Menu.Screen\n      name=\"My Favorites\"\n      component={Favourite}\n      options={{headerTitleAlign: 'center'}}\n    />\n    <Menu.Screen\n      name=\"My Message\"\n      component={Message}\n      options={{headerTitleAlign: 'center'}}\n    />\n    <Menu.Screen\n      name=\"My Listings\"\n      component={MyListing}\n      options={{headerTitleAlign: 'center'}}\n    />\n  </Menu.Navigator>\n);\n\nconst BottomTabBar = ({navigation, state}) => (\n  <BottomNavigation\n    indicatorStyle={{backgroundColor: '#58854A'}}\n    selectedIndex={state.index}\n    onSelect={(index) => navigation.navigate(state.routeNames[index])}\n  >\n    <BottomNavigationTab\n      title=\"Explore\"\n      icon={<Icon name=\"compass-outline\" />}\n    />\n    <BottomNavigationTab title=\"Search\" icon={<Icon name=\"search-outline\" />} />\n    <BottomNavigationTab\n      title=\"Add Listing\"\n      icon={<Icon name=\"plus-circle-outline\" />}\n    />\n    <BottomNavigationTab\n      title=\"Profile\"\n      icon={<Icon name=\"person-outline\" />}\n    />\n  </BottomNavigation>\n);\n\nconst TabScreen = () => {\n  return (\n    <Tab.Navigator tabBar={(props) => <BottomTabBar {...props} />}>\n      <Tab.Screen\n        name=\"Explore\"\n        component={Explore}\n        options={{\n          headerTitleAlign: 'center',\n        }}\n      ></Tab.Screen>\n      <Tab.Screen\n        name=\"Search\"\n        component={Search}\n        options={{headerTitleAlign: 'center'}}\n      ></Tab.Screen>\n      <Tab.Screen\n        name=\"Add Listing\"\n        component={AddListing}\n        options={{headerTitleAlign: 'center'}}\n      ></Tab.Screen>\n      <Tab.Screen\n        name=\"ProfileWrap\"\n        component={MenuNavigator}\n        options={{headerShown: false}}\n      ></Tab.Screen>\n    </Tab.Navigator>\n  );\n};\n\nconst StackScreen = () => {\n  const {isLoggedIn} = useContext(MainContext);\n\n  return (\n    <Stack.Navigator>\n      {isLoggedIn ? (\n        <>\n          <Stack.Screen\n            options={{headerShown: false}}\n            name=\"Main\"\n            component={TabScreen}\n          ></Stack.Screen>\n          <Stack.Screen\n            name=\"Recently added\"\n            component={RecentlyAdded}\n            options={{headerShown: true}}\n          ></Stack.Screen>\n          <Stack.Screen\n            name=\"Popular now\"\n            component={PopularNow}\n            options={{headerShown: true}}\n          ></Stack.Screen>\n          <Stack.Screen\n            name=\"ProductDetail\"\n            component={ProductDetail}\n          ></Stack.Screen>\n        </>\n      ) : (\n        <>\n          <Stack.Screen\n            name=\"Welcome\"\n            component={Welcome}\n            options={{headerShown: false}}\n          ></Stack.Screen>\n          <Stack.Screen\n            name=\"Login\"\n            component={Login}\n            options={{headerShown: false}}\n          ></Stack.Screen>\n        </>\n      )}\n    </Stack.Navigator>\n  );\n};\n\nconst navigator = () => {\n  return (\n    <NavigationContainer>\n      <SafeAreaView style={GlobalStyles.AndroidSafeArea}>\n        <StackScreen />\n      </SafeAreaView>\n    </NavigationContainer>\n  );\n};\n\nexport default navigator;\n"]},"metadata":{},"sourceType":"module"}