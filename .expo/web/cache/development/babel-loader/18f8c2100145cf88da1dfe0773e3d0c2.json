{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Input, Button, Text, Layout, Icon, CheckBox, Modal, Card } from '@ui-kitten/components';\nimport { useForm, Controller } from 'react-hook-form';\nimport { checkUserName, signUp } from \"../hooks/ApiHooks\";\nimport { PropTypes } from 'prop-types';\nimport FormInput from \"./formComponents/FormInput\";\nimport { FormButton } from \"./elements/AppButton\";\nimport colors from \"../utils/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignupForm = function SignupForm(_ref) {\n  var setFormToggle = _ref.setFormToggle;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      checked = _useState2[0],\n      setChecked = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var _useForm = useForm({\n    defaultValues: {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    mode: 'onBlur'\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors,\n      getValues = _useForm.getValues;\n\n  var onSubmit = function onSubmit(data) {\n    var userData;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (checked) {\n              _context.next = 3;\n              break;\n            }\n\n            Alert.alert('Please read Terms and Conditions');\n            return _context.abrupt(\"return\");\n\n          case 3:\n            _context.prev = 3;\n            delete data.confirmPassword;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(signUp(data));\n\n          case 7:\n            userData = _context.sent;\n\n            if (userData) {\n              Alert.alert('Success', 'User created successfully.');\n              setFormToggle(true);\n            }\n\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](3);\n            console.error(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 11]], Promise);\n  };\n\n  return _jsxs(Layout, {\n    style: styles.layout,\n    children: [_jsx(Controller, {\n      control: control,\n      rules: {\n        required: {\n          value: true,\n          message: 'This is required.'\n        },\n        minLength: {\n          value: 3,\n          message: 'Username has to be at least 3 characters.'\n        },\n        validate: function validate(value) {\n          var available;\n          return _regeneratorRuntime.async(function validate$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  _context2.next = 3;\n                  return _regeneratorRuntime.awrap(checkUserName(value));\n\n                case 3:\n                  available = _context2.sent;\n\n                  if (!available) {\n                    _context2.next = 8;\n                    break;\n                  }\n\n                  return _context2.abrupt(\"return\", true);\n\n                case 8:\n                  return _context2.abrupt(\"return\", 'Username is already taken.');\n\n                case 9:\n                  _context2.next = 14;\n                  break;\n\n                case 11:\n                  _context2.prev = 11;\n                  _context2.t0 = _context2[\"catch\"](0);\n                  console.error(_context2.t0);\n\n                case 14:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, null, null, [[0, 11]], Promise);\n        }\n      },\n      render: function render(_ref2) {\n        var _ref2$field = _ref2.field,\n            onChange = _ref2$field.onChange,\n            onBlur = _ref2$field.onBlur,\n            value = _ref2$field.value;\n        return _jsx(FormInput, {\n          style: styles.input,\n          iconName: \"person-outline\",\n          name: \"Username\",\n          onBlur: onBlur,\n          onChange: onChange,\n          value: value,\n          textEntry: false\n        });\n      },\n      name: \"username\"\n    }), errors.username && _jsxs(Text, {\n      status: \"danger\",\n      children: [errors.username && errors.username.message, ' ']\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: {\n          value: true,\n          message: 'This is required.'\n        },\n        pattern: {\n          value: /\\S+@\\S+\\.\\S+$/,\n          message: 'Has to be valid email.'\n        }\n      },\n      render: function render(_ref3) {\n        var _ref3$field = _ref3.field,\n            onChange = _ref3$field.onChange,\n            onBlur = _ref3$field.onBlur,\n            value = _ref3$field.value;\n        return _jsx(FormInput, {\n          style: styles.input,\n          iconName: \"email-outline\",\n          name: \"Email\",\n          onBlur: onBlur,\n          onChange: onChange,\n          value: value,\n          textEntry: false\n        });\n      },\n      name: \"email\"\n    }), errors.email && _jsxs(Text, {\n      status: \"danger\",\n      children: [errors.email && errors.email.message, \" \"]\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: {\n          value: true,\n          message: 'This is required'\n        },\n        pattern: {\n          value: /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/,\n          message: 'Min 8, Uppercase & Number'\n        }\n      },\n      render: function render(_ref4) {\n        var _ref4$field = _ref4.field,\n            onChange = _ref4$field.onChange,\n            onBlur = _ref4$field.onBlur,\n            value = _ref4$field.value;\n        return _jsx(FormInput, {\n          style: styles.input,\n          iconName: \"lock-outline\",\n          name: \"Password\",\n          onBlur: onBlur,\n          onChange: onChange,\n          value: value,\n          textEntry: true\n        });\n      },\n      name: \"password\"\n    }), errors.password && _jsxs(Text, {\n      status: \"danger\",\n      children: [errors.password && errors.password.message, ' ']\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: {\n          value: true,\n          message: 'This is required'\n        },\n        validate: function validate(value) {\n          var _getValues = getValues(),\n              password = _getValues.password;\n\n          if (value === password) {\n            return true;\n          } else {\n            return 'Passwords do not match.';\n          }\n        }\n      },\n      render: function render(_ref5) {\n        var _ref5$field = _ref5.field,\n            onChange = _ref5$field.onChange,\n            onBlur = _ref5$field.onBlur,\n            value = _ref5$field.value;\n        return _jsx(FormInput, {\n          style: styles.input,\n          iconName: \"lock-outline\",\n          name: \"Confirm password\",\n          onBlur: onBlur,\n          onChange: onChange,\n          value: value,\n          textEntry: true\n        });\n      },\n      name: \"confirmPassword\"\n    }), errors.confirmPassword && _jsxs(Text, {\n      status: \"danger\",\n      children: [errors.confirmPassword && errors.confirmPassword.message, ' ']\n    }), _jsxs(CheckBox, {\n      checked: checked,\n      onChange: function onChange(nextChecked) {\n        return setChecked(nextChecked);\n      },\n      children: [_jsx(Button, {\n        onPress: function onPress() {\n          return setVisible(true);\n        },\n        status: \"warning\",\n        style: {\n          marginLeft: -110\n        },\n        appearance: \"ghost\",\n        children: \"I accept Terms and Condition\"\n      }), _jsx(Modal, {\n        visible: visible,\n        backdropStyle: styles.backdrop,\n        onBackdropPress: function onBackdropPress() {\n          return setVisible(false);\n        },\n        children: _jsxs(Card, {\n          style: styles.modal,\n          disabled: true,\n          children: [_jsx(Text, {\n            style: styles.text,\n            children: \"This agreement is between you the [\\u201CUser\\u201D or \\u201Cyou\\u201D] and PreOwned [\\u201Cwe or us or our\\u201D] If you do not agree with all of the provisions of this agreement, you cannot use the Services.\"\n          }), _jsx(Text, {\n            style: styles.text,\n            children: \"To remove any doubt, in the event of any conflict or discrepancy between these Terms and conditions and any other provisions and/or terms and/or otherwise between PreOwned and you, the provisions and the terms of these Terms of Use will prevail. Please feel free to contact us with any questions regarding the content of this agreement.\"\n          }), _jsx(Text, {\n            style: styles.text,\n            children: \"- Seller: those who upload their second hand product on our portal in order to sell it.\"\n          }), _jsx(Text, {\n            style: styles.text,\n            children: \"- Buyers: those who visit the portal in order to consult and buy certain second-hand products.\"\n          }), _jsx(Text, {\n            style: styles.text,\n            children: \"Sellers and Buyers users will be identified in the rest of this legal document with the word \\u201CUser/s\\u201D. PreOwned reserves the right to update the Terms and Conditions at any time without notice to the user.\"\n          }), _jsx(Text, {\n            style: styles.text,\n            children: \"This document represents the full and final agreement of the parties regarding these Terms and Conditions. In particular, it contains each and every legal and usage clause that the user must comply with during the entire period of use of our services.\"\n          }), _jsx(Button, {\n            style: styles.dismissBtn,\n            onPress: function onPress() {\n              return setVisible(false);\n            },\n            children: \"DISMISS\"\n          })]\n        })\n      })]\n    }), _jsx(FormButton, {\n      handleSubmit: handleSubmit,\n      onSubmit: onSubmit,\n      disabled: true,\n      text: \"Sign Up\"\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  layout: {\n    height: 350,\n    justifyContent: 'space-around',\n    backgroundColor: colors.primary,\n    borderColor: colors.primary\n  },\n  backdrop: {\n    backgroundColor: colors.primary\n  },\n  dismissBtn: {\n    marginTop: 20,\n    borderRadius: 15\n  },\n  input: {},\n  modal: {\n    margin: 10,\n    borderRadius: 15\n  },\n  text: {\n    lineHeight: 21,\n    padding: 5,\n    fontWeight: '500',\n    fontSize: 14\n  }\n});\nSignupForm.propTypes = {\n  setFormToggle: PropTypes.func\n};\nexport default SignupForm;","map":{"version":3,"sources":["/Users/anhuynh2503/Desktop/React Native/Project/pre-owned/components/SignupForm.js"],"names":["React","useState","Input","Button","Text","Layout","Icon","CheckBox","Modal","Card","useForm","Controller","checkUserName","signUp","PropTypes","FormInput","FormButton","colors","SignupForm","setFormToggle","checked","setChecked","visible","setVisible","defaultValues","username","email","password","confirmPassword","mode","control","handleSubmit","errors","formState","getValues","onSubmit","data","Alert","alert","userData","console","error","styles","layout","required","value","message","minLength","validate","available","field","onChange","onBlur","input","pattern","nextChecked","marginLeft","backdrop","modal","text","dismissBtn","StyleSheet","create","height","justifyContent","backgroundColor","primary","borderColor","marginTop","borderRadius","margin","lineHeight","padding","fontWeight","fontSize","propTypes","func"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {StyleSheet, Alert} from 'react-native';\nimport {\n  Input,\n  Button,\n  Text,\n  Layout,\n  Icon,\n  CheckBox,\n  Modal,\n  Card,\n} from '@ui-kitten/components';\nimport {useForm, Controller} from 'react-hook-form';\n// import {useUser} from '../hooks/ApiHooks';\nimport {checkUserName, signUp} from '../hooks/ApiHooks';\nimport {PropTypes} from 'prop-types';\nimport FormInput from './formComponents/FormInput';\nimport {FormButton} from './elements/AppButton';\nimport colors from '../utils/colors';\n\nconst SignupForm = ({setFormToggle}) => {\n  //for checkbox\n  const [checked, setChecked] = useState(false);\n  const [visible, setVisible] = useState(false);\n  //Api\n  // const {signupUser, checkUsername} = useUser();\n\n  const {\n    control,\n    handleSubmit,\n    formState: {errors},\n    getValues,\n  } = useForm({\n    defaultValues: {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n    },\n    mode: 'onBlur',\n  });\n\n  const onSubmit = async (data) => {\n    if (!checked) {\n      Alert.alert('Please read Terms and Conditions');\n      return;\n    }\n    try {\n      delete data.confirmPassword;\n      const userData = await signUp(data);\n      if (userData) {\n        Alert.alert('Success', 'User created successfully.');\n        setFormToggle(true);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Layout style={styles.layout}>\n      <Controller\n        control={control}\n        rules={{\n          required: {value: true, message: 'This is required.'},\n          minLength: {\n            value: 3,\n            message: 'Username has to be at least 3 characters.',\n          },\n          validate: async (value) => {\n            try {\n              const available = await checkUserName(value);\n              if (available) {\n                return true;\n              } else {\n                return 'Username is already taken.';\n              }\n            } catch (error) {\n              console.error(error);\n            }\n          },\n        }}\n        render={({field: {onChange, onBlur, value}}) => (\n          <FormInput\n            style={styles.input}\n            iconName=\"person-outline\"\n            name=\"Username\"\n            onBlur={onBlur}\n            onChange={onChange}\n            value={value}\n            textEntry={false}\n          />\n        )}\n        name=\"username\"\n      />\n\n      {errors.username && (\n        <Text status=\"danger\">\n          {errors.username && errors.username.message}{' '}\n        </Text>\n      )}\n\n      <Controller\n        control={control}\n        rules={{\n          required: {value: true, message: 'This is required.'},\n          pattern: {\n            value: /\\S+@\\S+\\.\\S+$/,\n            message: 'Has to be valid email.',\n          },\n        }}\n        render={({field: {onChange, onBlur, value}}) => (\n          <FormInput\n            style={styles.input}\n            iconName=\"email-outline\"\n            name=\"Email\"\n            onBlur={onBlur}\n            onChange={onChange}\n            value={value}\n            textEntry={false}\n            // Error message not working ?\n            // errorMessage={errors.email && errors.email.message}\n          />\n        )}\n        name=\"email\"\n      />\n\n      {errors.email && (\n        <Text status=\"danger\">{errors.email && errors.email.message} </Text>\n      )}\n\n      <Controller\n        control={control}\n        rules={{\n          required: {value: true, message: 'This is required'},\n          pattern: {\n            /**\n             *  Password criteria\n             *  Minimum length 8 , atlease 1 digit\n             *  Atleast 1 upper case of lower case character\n             */\n            value: /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/,\n            message: 'Min 8, Uppercase & Number',\n          },\n        }}\n        render={({field: {onChange, onBlur, value}}) => (\n          <FormInput\n            style={styles.input}\n            iconName=\"lock-outline\"\n            name=\"Password\"\n            onBlur={onBlur}\n            onChange={onChange}\n            value={value}\n            textEntry={true}\n          />\n        )}\n        name=\"password\"\n      />\n\n      {errors.password && (\n        <Text status=\"danger\">\n          {errors.password && errors.password.message}{' '}\n        </Text>\n      )}\n\n      <Controller\n        control={control}\n        rules={{\n          required: {value: true, message: 'This is required'},\n          validate: (value) => {\n            const {password} = getValues();\n            if (value === password) {\n              return true;\n            } else {\n              return 'Passwords do not match.';\n            }\n          },\n        }}\n        render={({field: {onChange, onBlur, value}}) => (\n          <FormInput\n            style={styles.input}\n            iconName=\"lock-outline\"\n            name=\"Confirm password\"\n            onBlur={onBlur}\n            onChange={onChange}\n            value={value}\n            textEntry={true}\n          />\n        )}\n        name=\"confirmPassword\"\n      />\n\n      {errors.confirmPassword && (\n        <Text status=\"danger\">\n          {errors.confirmPassword && errors.confirmPassword.message}{' '}\n        </Text>\n      )}\n\n      {/* <Input style={styles.input} accessoryLeft={<Icon name=\"person-outline\"/>} placeholder=\"Username\" /> */}\n      {/* <Input style={styles.input} accessoryLeft={<Icon name=\"email-outline\"/>} placeholder='Email' /> */}\n      {/* <Input style={styles.input} accessoryLeft={<Icon name=\"lock-outline\"/>} placeholder='Password' /> */}\n      {/* <Input style={styles.input} accessoryLeft={<Icon name=\"lock-outline\"/>} placeholder='Confirm password' /> */}\n      <CheckBox\n        checked={checked}\n        onChange={(nextChecked) => setChecked(nextChecked)}\n      >\n        <Button\n          onPress={() => setVisible(true)}\n          status=\"warning\"\n          style={{marginLeft: -110}}\n          appearance=\"ghost\"\n        >\n          I accept Terms and Condition\n        </Button>\n        <Modal\n          visible={visible}\n          backdropStyle={styles.backdrop}\n          onBackdropPress={() => setVisible(false)}\n        >\n          <Card style={styles.modal} disabled={true}>\n            <Text style={styles.text}>\n              This agreement is between you the [“User” or “you”] and PreOwned\n              [“we or us or our”] If you do not agree with all of the provisions\n              of this agreement, you cannot use the Services.\n            </Text>\n            <Text style={styles.text}>\n              To remove any doubt, in the event of any conflict or discrepancy\n              between these Terms and conditions and any other provisions and/or\n              terms and/or otherwise between PreOwned and you, the provisions\n              and the terms of these Terms of Use will prevail. Please feel free\n              to contact us with any questions regarding the content of this\n              agreement.\n            </Text>\n            <Text style={styles.text}>\n              - Seller: those who upload their second hand product on our portal\n              in order to sell it.\n            </Text>\n            <Text style={styles.text}>\n              - Buyers: those who visit the portal in order to consult and buy\n              certain second-hand products.\n            </Text>\n            <Text style={styles.text}>\n              Sellers and Buyers users will be identified in the rest of this\n              legal document with the word “User/s”. PreOwned reserves the right\n              to update the Terms and Conditions at any time without notice to\n              the user.\n            </Text>\n            <Text style={styles.text}>\n              This document represents the full and final agreement of the\n              parties regarding these Terms and Conditions. In particular, it\n              contains each and every legal and usage clause that the user must\n              comply with during the entire period of use of our services.\n            </Text>\n            <Button style={styles.dismissBtn} onPress={() => setVisible(false)}>\n              DISMISS\n            </Button>\n          </Card>\n        </Modal>\n      </CheckBox>\n\n      <FormButton\n        handleSubmit={handleSubmit}\n        onSubmit={onSubmit}\n        disabled={true}\n        text=\"Sign Up\"\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  layout: {\n    height: 350,\n    justifyContent: 'space-around',\n    backgroundColor: colors.primary,\n    borderColor: colors.primary,\n  },\n\n  backdrop: {\n    backgroundColor: colors.primary,\n  },\n  dismissBtn: {marginTop: 20, borderRadius: 15},\n  input: {\n    // margin: 10,\n  },\n  modal: {\n    margin: 10,\n    borderRadius: 15,\n  },\n  text: {\n    lineHeight: 21,\n    padding: 5,\n    fontWeight: '500',\n    fontSize: 14,\n  },\n});\n\nSignupForm.propTypes = {\n  setFormToggle: PropTypes.func,\n};\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}